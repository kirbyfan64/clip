#!/usr/bin/env bash

# Copyright (c) 2017 Ryan Gonzalez

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

set -e

error() {
    echo "$@" >&2
    exit 1
}

tool_test() {
    local path=${!1}
    which "$path" 2>&1 >/dev/null && tool=$1
}

usage_str="usage: $0 [-h] [-iosn] [<file|->]"

usage() {
    echo "$usage_str"
}

usage_error() {
    error "$usage_str"
}

help() {
    usage
    echo
    echo -e "-h\tShow this screen."
    echo -e "-l\tPrint the license."
    echo -e "-i\tInstall this tool to \$BINDIR (default: /usr/local/bin)."
    echo -e "-o\tPaste instead of copy."
    echo -e "-s\tTry to use xsel before trying xclip."
    echo -e "-n\tStrip the last newline when copying or pasting."
    echo -e "<file>\tInput file when copying, or output file when pasting."
    echo -e "\tDefault: stdin/stdout."
    exit 0
}

license() {
    sed -n 's/^# //;3,20p' "$0"
    exit 0
}

install_() {
    install "$0" "${BINDIR:-/usr/local/bin}/clip"
    exit 0
}

argtail() {
    printf "%s" "$@" | cut -c 2-
}

rmlastnl() {
    awk '{if(n)print "";printf "%s",$0;n=1}'
}


mode=copy
order="xclip xsel"
xclip=${CLIP_XCLIP:-xclip}
xsel=${CLIP_XSEL:-xsel}
xclip_args=
xsel_reader=cat

while [[ "$1" =~ ^- ]]; do
    arg=`argtail "$1"`

    while [ -n "$arg" ]; do
        case "$arg" in
        h*) help ;;
        l*) license ;;
        o*) mode=paste ;;
        i*) install_ ;;
        s*) order="xsel xclip" ;;
        n*) xclip_args=-rmlastnl; xsel_reader=rmlastnl ;;
        *) usage_error ;;
        esac

        arg=`argtail "$arg"`
    done

    shift
done

if [ -n "$1" ]; then
    file="$1"
    shift
fi

[ -n "$1" ] && usage_error

for tool_option in $order; do
    tool_test $tool_option
    [ -n "$tool" ] && break
done
[ -z "$tool" ] && error "Cannot find xclip or xsel."

case "$tool-$mode-$file" in
    xclip-copy-*) $xclip -selection clipboard $xclip_args $file ;;
    xclip-paste-) $xclip -o -selection clipboard $xclip_args ;;
    xclip-paste-*) $xclip -o -selection clipboard $xclip_args > $file ;;
    xsel-copy-) $xsel_reader | $xsel -ib ;;
    xsel-copy-*) $xsel_reader < $file | $xsel -ib ;;
    xsel-paste-) $xsel -ob | $xsel_reader ;;
    xsel-paste-*) $xsel -ob | $xsel_reader > $file ;;
esac
